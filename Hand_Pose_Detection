import cv2
import mediapipe as mp 
import numpy as np 
from tensorflow.keras.models import load_model

# mediapipe
mp_hands = mp.solutions.hands
mp_draw = mp.solutions.drawing_utils

#  reading video from webcam 

cap = cv2.VideoCapture(0)
with mp_hands.Hands(max_num_hands=1 ,min_detection_confidence=0.9, min_tracking_confidence = 0.5) as hands:
    while True:
        ret, image =cap.read()
        
       # frame vertically
        image = cv2.flip(image,1)

        image = cv2.cvtColor(cv2.flip(image, 1), cv2.COLOR_BGR2RGB)
    # To improve performance, optionally mark the image as not writeable to
    # pass by reference.
        image.flags.writeable = False
        results = hands.process(image)

    # Draw the hand annotations on the image.
        image.flags.writeable = True
        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
        if results.multi_hand_landmarks:
            for hand_landmarks in results.multi_hand_landmarks:
                mp_draw.draw_landmarks(
                image,
                hand_landmarks,
                mp_hands.HAND_CONNECTIONS)
        cv2.imshow('MediaPipe Hands', image)
        if cv2.waitKey(5) & 0xFF == ord('q'):
            break
cap.release()
cv2.destroyAllWindows()



